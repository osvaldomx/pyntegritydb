name: Ejecutar Pruebas

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Probar en Python ${{ matrix.python-version }} con ${{ matrix.db-type }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        db-type: ["sqlite", "postgres", "mysql"]

    # Inicia contenedores de BD para postgres y mysql
    services:
      postgres:
        if: ${{ matrix.db-type == 'postgres' }}
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8.0
        if: ${{ matrix.db-type == 'mysql' }}
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4

      - name: Configurar Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Instalar dependencias base
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Instalar driver de base de datos
        if: ${{ matrix.db-type != 'sqlite' }}
        run: |
          if [ "${{ matrix.db-type }}" == "postgres" ]; then
            pip install psycopg2-binary
          elif [ "${{ matrix.db-type }}" == "mysql" ]; then
            pip install PyMySQL
          fi

      - name: Construir la URI de la base de datos
        id: db_uri
        run: |
          if [ "${{ matrix.db-type }}" == "sqlite" ]; then
            echo "DB_URI=sqlite:///test_integration_db.sqlite" >> $GITHUB_ENV
          elif [ "${{ matrix.db-type }}" == "postgres" ]; then
            echo "DB_URI=postgresql://testuser:testpassword@localhost:5432/testdb" >> $GITHUB_ENV
          elif [ "${{ matrix.db-type }}" == "mysql" ]; then
            echo "DB_URI=mysql+pymysql://testuser:testpassword@localhost:3306/testdb" >> $GITHUB_ENV
          fi

      - name: Ejecutar pruebas de integraci√≥n
        run: pytest tests/test_integration.py
        env:
          # Pasa la URI construida a la prueba
          DB_URI: ${{ env.DB_URI }}